{
  "info": {
    "name": "AttendEase Complete API Test Suite",
    "description": "Complete test collection with all test data - Ready to run!",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{admin_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "lecturer_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "student_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "lecturer_user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "student_user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "department_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "academic_year_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "semester_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "course_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "geofence_area_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "lecturer_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "student_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "course_assignment_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "enrollment_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "session_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "attendance_record_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "notification_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "timestamp",
      "value": "",
      "type": "string"
    },
    {
      "key": "random_num",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üöÄ SETUP - Generate Test Data",
      "item": [
        {
          "name": "Generate Dynamic Variables",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/health",
              "host": ["{{base_url}}"],
              "path": ["api", "health"]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Generate dynamic test data",
                  "const timestamp = Date.now();",
                  "const randomNum = Math.floor(Math.random() * 9999) + 1000;",
                  "",
                  "pm.collectionVariables.set('timestamp', timestamp);",
                  "pm.collectionVariables.set('random_num', randomNum);",
                  "",
                  "console.log('Generated timestamp:', timestamp);",
                  "console.log('Generated random number:', randomNum);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Health check successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "console.log('‚úÖ Setup complete - Ready to run tests!');"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üîê AUTHENTICATION",
      "item": [
        {
          "name": "Register Admin User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin_{{timestamp}}@attendease.com\",\n  \"password\": \"AdminPass123!\",\n  \"user_type\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('admin_user_id', response.user.id);",
                  "    console.log('‚úÖ Admin user created:', response.user.email);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Admin User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin_{{timestamp}}@attendease.com\",\n  \"password\": \"AdminPass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('admin_token', response.access_token);",
                  "    console.log('‚úÖ Admin logged in successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Register Lecturer User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"lecturer_{{timestamp}}@attendease.com\",\n  \"password\": \"LecturerPass123!\",\n  \"user_type\": \"lecturer\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Lecturer registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('lecturer_user_id', response.user.id);",
                  "    console.log('‚úÖ Lecturer user created:', response.user.email);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Lecturer User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"lecturer_{{timestamp}}@attendease.com\",\n  \"password\": \"LecturerPass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Lecturer login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('lecturer_token', response.access_token);",
                  "    console.log('‚úÖ Lecturer logged in successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Register Student User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"student_{{timestamp}}@attendease.com\",\n  \"password\": \"StudentPass123!\",\n  \"user_type\": \"student\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Student registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('student_user_id', response.user.id);",
                  "    console.log('‚úÖ Student user created:', response.user.email);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Student User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"student_{{timestamp}}@attendease.com\",\n  \"password\": \"StudentPass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Student login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('student_token', response.access_token);",
                  "    console.log('‚úÖ Student logged in successfully');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üè¢ ACADEMIC STRUCTURE",
      "item": [
        {
          "name": "Create Department",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Computer Science {{random_num}}\",\n  \"code\": \"CSC{{random_num}}\",\n  \"description\": \"Department of Computer Science and Engineering\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/departments",
              "host": ["{{base_url}}"],
              "path": ["api", "departments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Department creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('department_id', response.department.id);",
                  "    console.log('‚úÖ Department created:', response.department.name);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Academic Year",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"year_name\": \"2024/2025-{{random_num}}\",\n  \"start_date\": \"2024-09-01\",\n  \"end_date\": \"2025-08-31\",\n  \"is_current\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/academic-years",
              "host": ["{{base_url}}"],
              "path": ["api", "academic-years"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Academic year creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('academic_year_id', response.academic_year.id);",
                  "    console.log('‚úÖ Academic year created:', response.academic_year.year_name);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Semester",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"academic_year_id\": \"{{academic_year_id}}\",\n  \"semester_number\": 1,\n  \"name\": \"First Semester {{random_num}}\",\n  \"start_date\": \"2024-09-01\",\n  \"end_date\": \"2025-01-31\",\n  \"is_current\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/semesters",
              "host": ["{{base_url}}"],
              "path": ["api", "semesters"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Semester creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('semester_id', response.semester.id);",
                  "    console.log('‚úÖ Semester created:', response.semester.name);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Course",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"course_code\": \"CSC{{random_num}}\",\n  \"course_title\": \"Data Structures and Algorithms\",\n  \"department_id\": \"{{department_id}}\",\n  \"level\": \"300\",\n  \"credit_units\": 3,\n  \"semester_number\": 1,\n  \"description\": \"Introduction to data structures and algorithm analysis\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/courses",
              "host": ["{{base_url}}"],
              "path": ["api", "courses"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Course creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('course_id', response.course.id);",
                  "    console.log('‚úÖ Course created:', response.course.course_code);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Geofence Area",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Lecture Hall {{random_num}}\",\n  \"description\": \"Primary lecture hall for computer science courses\",\n  \"geofence_type\": \"circular\",\n  \"center_latitude\": 6.5244,\n  \"center_longitude\": 3.3792,\n  \"radius_meters\": 50,\n  \"building\": \"Science Complex\",\n  \"floor\": \"Ground Floor\",\n  \"capacity\": 200\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/geofence-areas",
              "host": ["{{base_url}}"],
              "path": ["api", "geofence-areas"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Geofence area creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('geofence_area_id', response.geofence_area.id);",
                  "    console.log('‚úÖ Geofence area created:', response.geofence_area.name);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üë• USER PROFILES",
      "item": [
        {
          "name": "Create Lecturer Profile",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": \"{{lecturer_user_id}}\",\n  \"lecturer_id\": \"LEC{{random_num}}\",\n  \"full_name\": \"Dr. John Smith\",\n  \"specialization\": \"Computer Science\",\n  \"institutional_email\": \"john.smith{{random_num}}@university.edu\",\n  \"phone_number\": \"+1234567890\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/lecturers",
              "host": ["{{base_url}}"],
              "path": ["api", "lecturers"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Lecturer profile creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('lecturer_id', response.lecturer.id);",
                  "    console.log('‚úÖ Lecturer profile created:', response.lecturer.full_name);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Student Profile",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": \"{{student_user_id}}\",\n  \"matricle_number\": \"CSC/2024/{{random_num}}\",\n  \"full_name\": \"Jane Doe\",\n  \"department_id\": \"{{department_id}}\",\n  \"level\": \"300\",\n  \"gender\": \"Female\",\n  \"enrollment_year\": 2024,\n  \"phone_number\": \"+1234567891\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/students",
              "host": ["{{base_url}}"],
              "path": ["api", "students"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Student profile creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('student_id', response.student.id);",
                  "    console.log('‚úÖ Student profile created:', response.student.full_name);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìö COURSE MANAGEMENT",
      "item": [
        {
          "name": "Create Course Assignment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"lecturer_id\": \"{{lecturer_id}}\",\n  \"course_id\": \"{{course_id}}\",\n  \"semester_id\": \"{{semester_id}}\",\n  \"geofence_area_id\": \"{{geofence_area_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/course-assignments",
              "host": ["{{base_url}}"],
              "path": ["api", "course-assignments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Course assignment creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('course_assignment_id', response.course_assignment.id);",
                  "    console.log('‚úÖ Course assignment created');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Student Enrollment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"student_id\": \"{{student_id}}\",\n  \"course_id\": \"{{course_id}}\",\n  \"semester_id\": \"{{semester_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/student-enrollments",
              "host": ["{{base_url}}"],
              "path": ["api", "student-enrollments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Student enrollment creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('enrollment_id', response.student_enrollment.id);",
                  "    console.log('‚úÖ Student enrollment created');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìã ATTENDANCE SYSTEM",
      "item": [
        {
          "name": "Create Attendance Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{lecturer_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"course_assignment_id\": \"{{course_assignment_id}}\",\n  \"geofence_area_id\": \"{{geofence_area_id}}\",\n  \"session_name\": \"Week 1 Lecture - {{random_num}}\",\n  \"topic\": \"Introduction to Data Structures\",\n  \"late_threshold_minutes\": 15,\n  \"auto_end_minutes\": 120\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/attendance-sessions",
              "host": ["{{base_url}}"],
              "path": ["api", "attendance-sessions"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Attendance session creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('session_id', response.session.id);",
                  "    console.log('‚úÖ Attendance session created:', response.session.session_name);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Student Check-in (Attendance Record)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{student_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"session_id\": \"{{session_id}}\",\n  \"location_latitude\": 6.5244,\n  \"location_longitude\": 3.3792,\n  \"check_in_method\": \"face_recognition\",\n  \"face_match_confidence\": 95.5\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/attendance-records",
              "host": ["{{base_url}}"],
              "path": ["api", "attendance-records"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Attendance record creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('attendance_record_id', response.attendance_record.id);",
                  "    console.log('‚úÖ Student checked in successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Active Sessions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{lecturer_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/attendance-sessions/active",
              "host": ["{{base_url}}"],
              "path": ["api", "attendance-sessions", "active"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get active sessions successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "console.log('‚úÖ Active sessions retrieved');"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üîî NOTIFICATIONS",
      "item": [
        {
          "name": "Create Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"recipient_id\": \"{{student_user_id}}\",\n  \"notification_type\": \"session_started\",\n  \"title\": \"New Attendance Session Started\",\n  \"message\": \"Data Structures and Algorithms class has started. Please check in.\",\n  \"data\": {\"session_id\": \"{{session_id}}\"}\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/notifications",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Notification creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('notification_id', response.notification.id);",
                  "    console.log('‚úÖ Notification created');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Student Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{student_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get notifications successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "console.log('‚úÖ Student notifications retrieved');"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìä DASHBOARDS",
      "item": [
        {
          "name": "Admin Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/dashboard/admin",
              "host": ["{{base_url}}"],
              "path": ["api", "dashboard", "admin"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin dashboard successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Admin Dashboard Data:');",
                  "    console.log('   Total Users:', response.system_overview?.total_users);",
                  "    console.log('   Total Students:', response.system_overview?.total_students);",
                  "    console.log('   Total Lecturers:', response.system_overview?.total_lecturers);",
                  "    console.log('   Active Sessions:', response.attendance_overview?.active_sessions);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Lecturer Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{lecturer_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/dashboard/lecturer",
              "host": ["{{base_url}}"],
              "path": ["api", "dashboard", "lecturer"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Lecturer dashboard successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Lecturer Dashboard Data:');",
                  "    console.log('   Course Assignments:', response.course_assignments);",
                  "    console.log('   Students Taught:', response.total_students_taught);",
                  "    console.log('   Active Sessions:', response.active_sessions?.length);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Student Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{student_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/dashboard/student",
              "host": ["{{base_url}}"],
              "path": ["api", "dashboard", "student"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Student dashboard successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Student Dashboard Data:');",
                  "    console.log('   Enrolled Courses:', response.enrolled_courses);",
                  "    console.log('   Attendance %:', response.attendance_statistics?.attendance_percentage);",
                  "    console.log('   Active Sessions:', response.active_sessions?.length);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Quick Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/dashboard/quick-stats",
              "host": ["{{base_url}}"],
              "path": ["api", "dashboard", "quick-stats"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Quick stats successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Quick Stats:');",
                  "    console.log('   Unread Notifications:', response.unread_notifications);",
                  "    console.log('   Active Sessions:', response.active_sessions_count);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìà REPORTS",
      "item": [
        {
          "name": "Course Attendance Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{lecturer_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/reports/attendance/course/{{course_assignment_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "reports", "attendance", "course", "{{course_assignment_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Course attendance report successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Course Attendance Report:');",
                  "    console.log('   Total Students:', response.overall_statistics?.total_students);",
                  "    console.log('   Total Sessions:', response.overall_statistics?.total_sessions);",
                  "    console.log('   Attendance Rate:', response.overall_statistics?.overall_attendance_rate + '%');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Student Attendance Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{lecturer_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/reports/attendance/student/{{student_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "reports", "attendance", "student", "{{student_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Student attendance report successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Student Attendance Report:');",
                  "    console.log('   Student:', response.student?.full_name);",
                  "    console.log('   Total Records:', response.overall_statistics?.total_records);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Attendance Summary Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/reports/attendance/summary",
              "host": ["{{base_url}}"],
              "path": ["api", "reports", "attendance", "summary"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Attendance summary report successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Attendance Summary Report:');",
                  "    console.log('   Total Records:', response.overall_statistics?.total_records);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Course Performance Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/reports/courses/performance",
              "host": ["{{base_url}}"],
              "path": ["api", "reports", "courses", "performance"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Course performance report successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Course Performance Report:');",
                  "    console.log('   Courses Analyzed:', response.course_performance?.length);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Student Performance Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/reports/students/performance",
              "host": ["{{base_url}}"],
              "path": ["api", "reports", "students", "performance"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Student performance report successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('‚úÖ Student Performance Report:');",
                  "    console.log('   Students Analyzed:', response.student_performance?.length);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "‚öôÔ∏è SYSTEM SETTINGS",
      "item": [
        {
          "name": "Create System Setting",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"setting_key\": \"app.test_setting_{{timestamp}}\",\n  \"setting_value\": \"test_value\",\n  \"setting_type\": \"string\",\n  \"description\": \"Test setting for API testing\",\n  \"is_public\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/system-settings",
              "host": ["{{base_url}}"],
              "path": ["api", "system-settings"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('System setting creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "console.log('‚úÖ System setting created');"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All System Settings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/system-settings",
              "host": ["{{base_url}}"],
              "path": ["api", "system-settings"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get system settings successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "console.log('‚úÖ System settings retrieved');"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üéØ FINAL VERIFICATION",
      "item": [
        {
          "name": "Verify Complete Workflow",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/dashboard/admin",
              "host": ["{{base_url}}"],
              "path": ["api", "dashboard", "admin"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Final verification successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "console.log('');",
                  "console.log('üéâ ATTENDEASE API COMPLETE TEST SUCCESSFUL!');",
                  "console.log('=====================================');",
                  "console.log('‚úÖ All systems operational');",
                  "console.log('‚úÖ Full workflow tested');",
                  "console.log('‚úÖ Dashboard and reports working');",
                  "console.log('‚úÖ Ready for production!');",
                  "console.log('');",
                  "",
                  "// Display final summary",
                  "const adminToken = pm.collectionVariables.get('admin_token');",
                  "const lecturerToken = pm.collectionVariables.get('lecturer_token');",
                  "const studentToken = pm.collectionVariables.get('student_token');",
                  "",
                  "console.log('üìã TEST DATA CREATED:');",
                  "console.log('   Admin Token:', adminToken ? '‚úÖ Generated' : '‚ùå Missing');",
                  "console.log('   Lecturer Token:', lecturerToken ? '‚úÖ Generated' : '‚ùå Missing');",
                  "console.log('   Student Token:', studentToken ? '‚úÖ Generated' : '‚ùå Missing');",
                  "console.log('   Department ID:', pm.collectionVariables.get('department_id'));",
                  "console.log('   Course ID:', pm.collectionVariables.get('course_id'));",
                  "console.log('   Session ID:', pm.collectionVariables.get('session_id'));",
                  "console.log('   Attendance Record ID:', pm.collectionVariables.get('attendance_record_id'));"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
